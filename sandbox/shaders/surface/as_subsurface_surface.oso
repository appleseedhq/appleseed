OpenShadingLanguage 1.00
# Compiled by oslc 1.6.9
shader as_subsurface_surface	%meta{string,help,"Subsurface surface shader"} 
param	vector	Normal	0 0 0		%read{6,9} %write{0,0} %initexpr
param	float	Reflectance	0.80000001		%meta{float,min,0}  %read{7,10} %write{2147483647,-1}
param	color	Color	1 1 1		%read{6,10} %write{2147483647,-1}
param	string	Profile	"better_dipole"		%meta{string,widget,"popup"} %meta{string,options,"normalized_diffusion|standard_dipole|better_dipole|directional_dipole"}  %read{6,6} %write{2147483647,-1}
param	color	Radius	1 1 1		%read{4,4} %write{2147483647,-1}
param	float	RadiusScale	0.1		%read{4,4} %write{2147483647,-1}
param	float	Ior	1.3		%read{6,6} %write{2147483647,-1}
param	int	MaxSubsurfaceRayDepth	2		%meta{string,help,"Replace subsurface by diffuse when ray depth is greater."} %meta{int,min,0}  %read{2,2} %write{2147483647,-1}
oparam	closure color	BSSRDF			%read{2147483647,-1} %write{7,11}
global	normal	N	%read{0,0} %write{2147483647,-1}
local	int	RayDepth	%read{2,2} %write{1,1}
temp	int	$tmp1	%read{2147483647,-1} %write{1,1}
const	string	$const1	"path:ray_depth"		%read{1,1} %write{2147483647,-1}
temp	int	$tmp2	%read{3,3} %write{2,2}
temp	closure color	$tmp3	%read{7,7} %write{6,6}
temp	color	$tmp4	%read{6,6} %write{4,4}
const	string	$const2	"as_subsurface"		%read{5,6} %write{2147483647,-1}
const	float	$const3	0		%read{6,9} %write{2147483647,-1}
temp	closure color	$tmp5	%read{11,11} %write{9,9}
const	string	$const4	"diffuse"		%read{8,8} %write{2147483647,-1}
const	string	$const6	"oren_nayar"		%read{9,9} %write{2147483647,-1}
temp	color	$tmp6	%read{11,11} %write{10,10}
code Normal
# ./surface/as_subsurface_surface.osl:34
#     vector               Normal = N,
	assign		Normal N 	%filename{"./surface/as_subsurface_surface.osl"} %line{34} %argrw{"wr"}
code ___main___
# ./surface/as_subsurface_surface.osl:57
#     getattribute("path:ray_depth", RayDepth);
	getattribute	$tmp1 $const1 RayDepth 	%filename{"./surface/as_subsurface_surface.osl"} %line{57} %argrw{"wrw"}
# ./surface/as_subsurface_surface.osl:58
#     if (RayDepth <= MaxSubsurfaceRayDepth)
	le		$tmp2 RayDepth MaxSubsurfaceRayDepth 	%line{58} %argrw{"wrr"}
	if		$tmp2 8 12 	%argrw{"r"}
# ./surface/as_subsurface_surface.osl:64
#             Radius * RadiusScale,
	mul		$tmp4 Radius RadiusScale 	%line{64} %argrw{"wrr"}
# ./surface/as_subsurface_surface.osl:65
#             Ior);
	functioncall	$const2 7 	%line{65} %argrw{"r"}
# /home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:612
# }
	closure		$tmp3 $const2 Profile Normal Color $tmp4 Ior $const3 	%filename{"/home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h"} %line{612} %argrw{"wrrrrrrr"}
# ./surface/as_subsurface_surface.osl:65
#             Ior);
	mul		BSSRDF $tmp3 Reflectance 	%filename{"./surface/as_subsurface_surface.osl"} %line{65} %argrw{"wrr"}
# ./surface/as_subsurface_surface.osl:68
#         BSSRDF = Reflectance * Color * diffuse(Normal);
	functioncall	$const4 10 	%line{68} %argrw{"r"}
# /home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:658
# }
	closure		$tmp5 $const6 Normal $const3 	%filename{"/home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h"} %line{658} %argrw{"wrrr"}
# ./surface/as_subsurface_surface.osl:68
#         BSSRDF = Reflectance * Color * diffuse(Normal);
	mul		$tmp6 Reflectance Color 	%filename{"./surface/as_subsurface_surface.osl"} %line{68} %argrw{"wrr"}
	mul		BSSRDF $tmp5 $tmp6 	%argrw{"wrr"}
	end
