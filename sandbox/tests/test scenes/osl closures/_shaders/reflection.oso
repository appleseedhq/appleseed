OpenShadingLanguage 1.00
# Compiled by oslc 1.5.7dev
surface reflection
param	float	Kr	1 		 %read{2,2} %write{2147483647,-1}
param	color	Cs	1 1 1 		 %read{2,2} %write{2147483647,-1}
global	normal	N	 %read{1,1} %write{2147483647,-1}
global	closure color	Ci	 %read{2147483647,-1} %write{3,3}
temp	closure color	$tmp1	 %read{3,3} %write{1,1}
const	string	$const1	"reflection"		 %read{0,1} %write{2147483647,-1}
const	float	$const2	0		 %read{1,1} %write{2147483647,-1}
temp	color	$tmp2	 %read{3,3} %write{2,2}
code ___main___
# reflection.osl:4
#     Ci = Kr * Cs * reflection(N);
	functioncall	$const1 2 	%filename{"reflection.osl"} %line{4} %argrw{"r"}
# /home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:498
# closure color translucent(normal N) BUILTIN;
	closure		$tmp1 $const1 N $const2 	%filename{"/home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h"} %line{498} %argrw{"wrrr"}
# reflection.osl:4
#     Ci = Kr * Cs * reflection(N);
	mul		$tmp2 Kr Cs 	%filename{"reflection.osl"} %line{4} %argrw{"wrr"}
	mul		Ci $tmp1 $tmp2 	%argrw{"wrr"}
	end
