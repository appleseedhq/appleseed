OpenShadingLanguage 1.00
# Compiled by oslc 1.10.3
# options: -I/home/est/Devel/appleseedhq/appleseed/sandbox/shaders/include
shader as_noise3d
param	vector	In	0 0 0		%read{1,1} %write{0,0} %derivs %initexpr
param	string	NoiseType	"perlin"		%meta{string,widget,"popup"} %meta{string,options,"perlin|uperlin|cell|simplex|usimplex|gabor"}  %read{4,7} %write{2147483647,-1}
param	int	Periodic	0		%meta{string,widget,"checkBox"}  %read{3,3} %write{2147483647,-1}
param	vector	Period	1 1 1		%read{4,5} %write{2147483647,-1} %derivs
param	vector	Frequency	1 1 1		%read{1,1} %write{2147483647,-1} %derivs
param	vector	Offset	0 0 0		%read{2,2} %write{2147483647,-1} %derivs
param	int	AnisotropyMode	0		%meta{string,widget,"mapper"} %meta{string,options,"Isotropic:0|Anisotropic:1|Hybrid:2"}  %read{4,7} %write{2147483647,-1}
param	vector	Direction	0 0 0		%read{4,7} %write{2147483647,-1}
param	float	Bandwidth	1		%read{4,7} %write{2147483647,-1}
param	float	Impulses	16		%read{4,7} %write{2147483647,-1}
oparam	float	FloatOut	0		%read{2147483647,-1} %write{4,6}
oparam	vector	VectorOut	0 0 0		%read{8,8} %write{5,7}
oparam	color	ColorOut	0 0 0		%read{2147483647,-1} %write{8,8}
global	point	P	%read{0,0} %write{2147483647,-1} %derivs
local	vector	p	%read{4,7} %write{2,2} %derivs
temp	vector	$tmp1	%read{2,2} %write{1,1} %derivs
const	string	$const1	"anisotropic"		%read{4,7} %write{2147483647,-1}
const	string	$const2	"direction"		%read{4,7} %write{2147483647,-1}
const	string	$const3	"bandwidth"		%read{4,7} %write{2147483647,-1}
const	string	$const4	"impulses"		%read{4,7} %write{2147483647,-1}
code In
# as_noise3d.osl:31
#     vector        In = P,
	assign		In P 	%filename{"as_noise3d.osl"} %line{31} %argrw{"wr"}
code ___main___
# as_noise3d.osl:57
#     vector p = (In * Frequency) + Offset;
	mul		$tmp1 In Frequency 	%filename{"as_noise3d.osl"} %line{57} %argrw{"wrr"}
	add		p $tmp1 Offset 	%argrw{"wrr"}
# as_noise3d.osl:59
#     if (Periodic)
	if		Periodic 6 8 	%line{59} %argrw{"r"}
# as_noise3d.osl:61
#         FloatOut = pnoise(
	pnoise		FloatOut NoiseType p Period $const1 AnisotropyMode $const2 Direction $const3 Bandwidth $const4 Impulses 	%line{61} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
# as_noise3d.osl:70
#         VectorOut = pnoise(
	pnoise		VectorOut NoiseType p Period $const1 AnisotropyMode $const2 Direction $const3 Bandwidth $const4 Impulses 	%line{70} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
# as_noise3d.osl:81
#         FloatOut = noise(
	noise		FloatOut NoiseType p $const1 AnisotropyMode $const2 Direction $const3 Bandwidth $const4 Impulses 	%line{81} %argrw{"wrrrrrrrrrr"} %argderivs{2}
# as_noise3d.osl:89
#         VectorOut = noise(
	noise		VectorOut NoiseType p $const1 AnisotropyMode $const2 Direction $const3 Bandwidth $const4 Impulses 	%line{89} %argrw{"wrrrrrrrrrr"} %argderivs{2}
# as_noise3d.osl:98
#     ColorOut = color(VectorOut);
	assign		ColorOut VectorOut 	%line{98} %argrw{"wr"}
	end
