OpenShadingLanguage 1.00
# Compiled by oslc 1.7.0dev
surface marble
param	color	Cd	0.5 0.5 0.5		%read{21,21} %write{0,0} %initexpr
param	float	Kd	0.80000001		%read{21,21} %write{2147483647,-1}
param	color	Cs	0.80000001 0.80000001 0.80000001		%read{32,32} %write{1,1} %initexpr
param	float	Ks	0.2		%read{32,32} %write{2147483647,-1}
param	int	object_space	1		%read{2,2} %write{2147483647,-1}
param	float	texturescale	2.5		%read{7,7} %write{2147483647,-1}
param	float	exponent	1000		%read{31,31} %write{2147483647,-1}
global	point	P	%read{5,6} %write{2147483647,-1}
global	normal	N	%read{20,31} %write{2147483647,-1}
global	closure color	Ci	%read{2147483647,-1} %write{34,34}
local	point	q	%read{7,13} %write{5,7}
local	float	marble	%read{12,22} %write{8,18}
local	float	f	%read{12,18} %write{9,18}
local	int	___302_i	%read{12,18} %write{11,18}
local	float[13]	marble_ramp	%read{27,27} %write{19,19}
const	color	$const1	0.5 0.5 0.5		%read{0,0} %write{2147483647,-1}
const	color	$const2	0.80000001 0.80000001 0.80000001		%read{1,1} %write{2147483647,-1}
const	int	$const3	1		%read{2,18} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
const	string	$const4	"object"		%read{5,5} %write{2147483647,-1}
const	string	$const5	"transform"		%read{4,4} %write{2147483647,-1}
const	string	$const6	"common"		%read{5,5} %write{2147483647,-1}
const	int	$const7	0		%read{8,11} %write{2147483647,-1}
const	int	$const8	4		%read{12,12} %write{2147483647,-1}
temp	int	$tmp2	%read{10,18} %write{11,18}
temp	float	$tmp3	%read{15,15} %write{14,14}
temp	point	$tmp4	%read{14,14} %write{13,13}
temp	float	$tmp5	%read{16,16} %write{15,15}
const	float	$const9	2.1700001		%read{17,17} %write{2147483647,-1}
const	float[13]	$const10	0.55000001 0.55000001 0.40000001 0.40000001 0.40000001 0.55000001 0.55000001 0.25999999 0.25999999 0.2 0.2 0.55000001 0.2 		%read{19,19} %write{2147483647,-1}
temp	closure color	$tmp6	%read{29,29} %write{20,20}
const	string	$const11	"diffuse"		%read{20,20} %write{2147483647,-1}
temp	color	$tmp7	%read{28,28} %write{21,21}
temp	float	$tmp8	%read{28,28} %write{27,27}
const	string	$const12	"catmull-rom"		%read{27,27} %write{2147483647,-1}
temp	float	$tmp9	%read{27,27} %write{26,26}
temp	float	$tmp10	%read{23,23} %write{22,22}
const	float	$const14	2		%read{22,22} %write{2147483647,-1}
const	float	$const15	0.75		%read{23,23} %write{2147483647,-1}
temp	float	$tmp11	%read{25,25} %write{23,23}
const	float	$const16	0		%read{26,26} %write{2147483647,-1}
const	float	$const17	1		%read{25,31} %write{2147483647,-1}
const	string	$const18	"clamp"		%read{24,24} %write{2147483647,-1}
temp	float	$tmp12	%read{26,26} %write{25,25}
temp	color	$tmp13	%read{29,29} %write{28,28}
temp	closure color	$tmp14	%read{34,34} %write{29,29}
temp	closure color	$tmp15	%read{33,33} %write{31,31}
const	string	$const19	"phong"		%read{30,30} %write{2147483647,-1}
const	vector	$const20	0 0 0		%read{31,31} %write{2147483647,-1}
const	color	$const21	0 0 0		%read{31,31} %write{2147483647,-1}
const	color	$const22	1 1 1		%read{31,31} %write{2147483647,-1}
const	string	$const23	"as_ashikhmin_shirley"		%read{31,31} %write{2147483647,-1}
temp	color	$tmp19	%read{33,33} %write{32,32}
temp	closure color	$tmp20	%read{34,34} %write{33,33}
code Cd
# marble.osl:15
#     color Cd = color(0.5),
	assign		Cd $const1 	%filename{"marble.osl"} %line{15} %argrw{"wr"}
code Cs
# marble.osl:17
#     color Cs = color(0.8),
	assign		Cs $const2 	%filename{"marble.osl"} %line{17} %argrw{"wr"}
code ___main___
# marble.osl:25
#     if (object_space == 1)
	eq		$tmp1 object_space $const3 	%filename{"marble.osl"} %line{25} %argrw{"wrr"}
	if		$tmp1 6 7 	%argrw{"r"}
# marble.osl:26
#         q = transform("object", P);
	functioncall	$const5 6 	%line{26} %argrw{"r"}
# /home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:256
#         // gives us the same result as if the shader-writer called refract()
	transform	q $const6 $const4 P 	%filename{"/home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h"} %line{256} %argrw{"wrrr"}
# marble.osl:28
#         q = P;
	assign		q P 	%filename{"marble.osl"} %line{28} %argrw{"wr"}
# marble.osl:30
#     q *= texturescale;
	mul		q q texturescale 	%line{30} %argrw{"wrr"}
# marble.osl:32
#     float marble = 0;
	assign		marble $const7 	%line{32} %argrw{"wr"}
# marble.osl:33
#     float f = 1;
	assign		f $const3 	%line{33} %argrw{"wr"}
# marble.osl:34
#     for (int i = 0; i < NNOISE; i += 1)
	for		$tmp2 12 13 18 19 	%line{34} %argrw{"r"}
	assign		___302_i $const7 	%argrw{"wr"}
	lt		$tmp2 ___302_i $const8 	%argrw{"wrr"}
# marble.osl:36
#         marble += snoise(q * f) / f;
	mul		$tmp4 q f 	%line{36} %argrw{"wrr"}
	snoise		$tmp3 $tmp4 	%argrw{"wr"}
	div		$tmp5 $tmp3 f 	%argrw{"wrr"}
	add		marble marble $tmp5 	%argrw{"wrr"}
# marble.osl:37
#         f *= 2.17;
	mul		f f $const9 	%line{37} %argrw{"wrr"}
# marble.osl:34
#     for (int i = 0; i < NNOISE; i += 1)
	add		___302_i ___302_i $const3 	%line{34} %argrw{"wrr"}
# marble.osl:54
#         };
	assign		marble_ramp $const10 	%line{54} %argrw{"wr"}
# marble.osl:57
#         Kd * Cd * spline("catmull-rom", clamp(2 * marble + .75, 0, 1), marble_ramp) * diffuse(N) +
	closure		$tmp6 $const11 N 	%line{57} %argrw{"wrr"}
	mul		$tmp7 Kd Cd 	%argrw{"wrr"}
	mul		$tmp10 $const14 marble 	%argrw{"wrr"}
	add		$tmp11 $tmp10 $const15 	%argrw{"wrr"}
	functioncall	$const18 27 	%argrw{"r"}
# /home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:157
# color  radians (color x)  { return x*(M_PI/180.0); }
	min		$tmp12 $tmp11 $const17 	%filename{"/home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h"} %line{157} %argrw{"wrr"}
	max		$tmp9 $tmp12 $const16 	%argrw{"wrr"}
# marble.osl:57
#         Kd * Cd * spline("catmull-rom", clamp(2 * marble + .75, 0, 1), marble_ramp) * diffuse(N) +
	spline		$tmp8 $const12 $tmp9 marble_ramp 	%filename{"marble.osl"} %line{57} %argrw{"wrrr"}
	mul		$tmp13 $tmp7 $tmp8 	%argrw{"wrr"}
	mul		$tmp14 $tmp6 $tmp13 	%argrw{"wrr"}
# marble.osl:58
#         Ks * Cs * phong(N, exponent);
	functioncall	$const19 32 	%line{58} %argrw{"r"}
# /home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:572
# closure color as_velvet(normal N, float alpha) BUILTIN;
	closure		$tmp15 $const23 N $const20 $const21 $const22 exponent exponent $const17 	%filename{"/home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h"} %line{572} %argrw{"wrrrrrrrr"}
# marble.osl:58
#         Ks * Cs * phong(N, exponent);
	mul		$tmp19 Ks Cs 	%filename{"marble.osl"} %line{58} %argrw{"wrr"}
	mul		$tmp20 $tmp15 $tmp19 	%argrw{"wrr"}
	add		Ci $tmp14 $tmp20 	%argrw{"wrr"}
	end
