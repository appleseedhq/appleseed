/*
    A slightly modified version of the blue_marble shader by Darwyn Peachey,
    from the Texturing & Modelling, A procedural approach book.
    Ported to OSL and removed the blue part of it.
*/

#define PALE_GRAY 0.55
#define MEDIUM_GRAY 0.40
#define DARK_GRAY 0.26
#define DARKER_GRAY 0.20

#define NNOISE 4

surface marble(
    color Color = color(0.5),
    int object_space = 1,
    float texturescale = 2.5,
    float exponent = 1000)
{
    point q;

    if (object_space == 1)
        q = transform("object", P);
    else
        q = P;

    q *= texturescale;

    float marble = 0;
    float f = 1;
    for (int i = 0; i < NNOISE; i += 1)
    {
        marble += snoise(q * f) / f;
        f *= 2.17;
    }

    float marble_ramp[13] = {
        PALE_GRAY, 
        PALE_GRAY,
        MEDIUM_GRAY, 
        MEDIUM_GRAY, 
        MEDIUM_GRAY,
        PALE_GRAY, 
        PALE_GRAY,
        DARK_GRAY, 
        DARK_GRAY,
        DARKER_GRAY, 
        DARKER_GRAY,
        PALE_GRAY, 
        DARKER_GRAY
        };

    Ci = 
        as_disney(
            N,
            normalize(dPdu),
            Color * spline("catmull-rom", clamp(2 * marble + .75, 0, 1), marble_ramp),
            1,
            0,
            0.75,
            0,
            0,
            0.25,
            0,
            0,
            0,
            0);
}
