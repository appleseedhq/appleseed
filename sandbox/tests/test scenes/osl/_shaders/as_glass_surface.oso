OpenShadingLanguage 1.00
# Compiled by oslc 1.10.3
# options: -I/home/est/Devel/appleseedhq/appleseed/sandbox/shaders/include
shader as_glass_surface	%meta{string,help,"Glass surface shader"} 
param	vector	Normal	0 0 0		%read{1,1} %write{0,0} %initexpr
param	vector	Tn	0 0 0		%meta{int,lockgeom,0} %meta{string,help,"Tangent"} %meta{string,label,"Tangent"}  %read{1,1} %write{2147483647,-1}
param	float	Transmittance	0.800000012		%meta{float,min,0}  %read{2,2} %write{2147483647,-1}
param	color	SurfaceTransmittance	1 1 1		%read{1,1} %write{2147483647,-1}
param	color	ReflectionTint	1 1 1		%read{1,1} %write{2147483647,-1}
param	color	RefractionTint	1 1 1		%read{1,1} %write{2147483647,-1}
param	float	Ior	1.5		%meta{string,help,"Index of refraction"} %meta{int,divider,1}  %read{1,1} %write{2147483647,-1}
param	float	Roughness	0.100000001		%meta{string,help,"Surface roughness"} %meta{float,min,0.00100000005} %meta{float,max,1}  %read{1,1} %write{2147483647,-1}
param	float	Anisotropic	0		%meta{string,help,"Anisotropy"} %meta{float,min,-1} %meta{float,max,1} %meta{int,divider,1}  %read{1,1} %write{2147483647,-1}
param	color	VolumeTransmittance	1 1 1		%read{1,1} %write{2147483647,-1}
param	float	VolumeTransmittanceDistance	0		%read{1,1} %write{2147483647,-1}
oparam	closure color	BSDF			%read{2147483647,-1} %write{2,2}
global	normal	N	%read{0,0} %write{2147483647,-1}
temp	closure color	$tmp1	%read{2,2} %write{1,1}
const	string	$const1	"as_glass"		%read{1,1} %write{2147483647,-1}
code Normal
# as_glass_surface.osl:34
#     vector               Normal = N,
	assign		Normal N 	%filename{"as_glass_surface.osl"} %line{34} %argrw{"wr"}
code ___main___
# as_glass_surface.osl:71
#     BSDF = Transmittance * as_glass(
	closure		$tmp1 $const1 Normal Tn SurfaceTransmittance ReflectionTint RefractionTint Roughness Anisotropic Ior VolumeTransmittance VolumeTransmittanceDistance 	%filename{"as_glass_surface.osl"} %line{71} %argrw{"wrrrrrrrrrrr"}
	mul		BSDF $tmp1 Transmittance 	%argrw{"wrr"}
	end
