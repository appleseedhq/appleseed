OpenShadingLanguage 1.00
# Compiled by oslc 1.10.3
# options: -I/home/est/Devel/appleseedhq/appleseed/sandbox/shaders/include
surface derivs_test
param	int	direction	0		%read{2,11} %write{2147483647,-1}
param	int	analytic	0		%read{7,7} %write{2147483647,-1}
param	float	frequency	1		%read{0,1} %write{2147483647,-1} %derivs
global	normal	N	%read{15,15} %write{2147483647,-1}
global	float	u	%read{0,0} %write{2147483647,-1} %derivs
global	float	v	%read{1,1} %write{2147483647,-1} %derivs
global	closure color	Ci	%read{2147483647,-1} %write{19,19}
local	float	s	%read{5,10} %write{0,6} %derivs
local	float	t	%read{4,10} %write{1,5} %derivs
local	float	___340_tmp	%read{6,6} %write{4,4} %derivs
local	float	value	%read{13,14} %write{9,10} %derivs
local	float	deriv	%read{17,17} %write{13,14}
const	int	$const1	1		%read{2,2} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
const	float	$const2	75		%read{8,8} %write{2147483647,-1}
temp	float	$tmp2	%read{9,9} %write{8,8} %derivs
const	string	$const3	"sin_bump.tx"		%read{10,10} %write{2147483647,-1}
const	string	$const4	"swrap"		%read{10,10} %write{2147483647,-1}
const	string	$const5	"periodic"		%read{10,10} %write{2147483647,-1}
const	string	$const6	"twrap"		%read{10,10} %write{2147483647,-1}
const	int	$const7	0		%read{11,11} %write{2147483647,-1}
temp	int	$tmp3	%read{12,12} %write{11,11}
temp	closure color	$tmp4	%read{19,19} %write{15,15}
const	string	$const8	"diffuse"		%read{15,15} %write{2147483647,-1}
temp	float	$tmp5	%read{19,19} %write{18,18}
const	float	$const9	0		%read{18,18} %write{2147483647,-1}
const	float	$const10	1		%read{17,17} %write{2147483647,-1}
const	string	$const11	"clamp"		%read{16,16} %write{2147483647,-1}
temp	float	$tmp6	%read{18,18} %write{17,17}
code ___main___
# derivs_test.osl:8
#     float s = u * frequency;
	mul		s u frequency 	%filename{"derivs_test.osl"} %line{8} %argrw{"wrr"}
# derivs_test.osl:9
#     float t = v * frequency;
	mul		t v frequency 	%line{9} %argrw{"wrr"}
# derivs_test.osl:11
#     if (direction == 1)
	eq		$tmp1 direction $const1 	%line{11} %argrw{"wrr"}
	if		$tmp1 7 7 	%argrw{"r"}
# derivs_test.osl:13
#         float tmp = t;
	assign		___340_tmp t 	%line{13} %argrw{"wr"}
# derivs_test.osl:14
#         t = s;
	assign		t s 	%line{14} %argrw{"wr"}
# derivs_test.osl:15
#         s = tmp;
	assign		s ___340_tmp 	%line{15} %argrw{"wr"}
# derivs_test.osl:20
#     if (analytic)
	if		analytic 10 11 	%line{20} %argrw{"r"}
# derivs_test.osl:21
#         value = sin(75.0 * s);
	mul		$tmp2 $const2 s 	%line{21} %argrw{"wrr"}
	sin		value $tmp2 	%argrw{"wr"}
# derivs_test.osl:24
#         value = texture(
	texture		value $const3 s t $const4 $const5 $const6 $const5 	%line{24} %argrw{"wrrrrrrr"} %argderivs{2,3}
# derivs_test.osl:33
#     float deriv = direction == 0 ? Dx(value) : Dy(value);
	eq		$tmp3 direction $const7 	%line{33} %argrw{"wrr"}
	if		$tmp3 14 15 	%argrw{"r"}
	Dx		deriv value 	%argrw{"wr"} %argderivs{1}
	Dy		deriv value 	%argrw{"wr"} %argderivs{1}
# derivs_test.osl:34
#     Ci = clamp(deriv, 0.0, 1.0) * diffuse(N);
	closure		$tmp4 $const8 N 	%line{34} %argrw{"wrr"}
	functioncall	$const11 19 	%argrw{"r"}
# /home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp6 deriv $const10 	%filename{"/home/est/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h"} %line{163} %argrw{"wrr"}
	max		$tmp5 $tmp6 $const9 	%argrw{"wrr"}
# derivs_test.osl:34
#     Ci = clamp(deriv, 0.0, 1.0) * diffuse(N);
	mul		Ci $tmp4 $tmp5 	%filename{"derivs_test.osl"} %line{34} %argrw{"wrr"}
	end
