
//
// This source file is part of appleseed.
// Visit https://appleseedhq.net/ for additional information and resources.
//
// This software is released under the MIT license.
//
// Copyright (c) 2014-2018 The masked shader writer, The appleseedhq Organization
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

#include "transform.h"

shader as_map2d
(
    float        U = u,
    float        V = v,
    string       Flip = "Off"
    [[
        string widget = "popup",
        string options = "Off|U|V|Both"
    ]],
    vector       Center = 0.5,
    vector       Repeat = 1.0,
    float        Rotate = 0.0,
    vector       Offset = 0.0,
    output float UOut = 0,
    output float VOut = 0
)
{
    float uu = U;
    float vv = V;

    if (Flip == "U")
        uu = 1.0 - uu;
    else if (Flip == "V")
        vv = 1.0 - vv;
    else if (Flip == "Both")
    {
        uu = 1.0 - uu;
        vv = 1.0 - vv;
    }

    uu = (uu - Center[0]) * Repeat[0];
    vv = (vv - Center[1]) * Repeat[1];

    rotate2d(uu, vv, Rotate, uu, vv);

    UOut = uu + Center[0] + Offset[0];
    VOut = vv + Center[1] + Offset[1];
}
