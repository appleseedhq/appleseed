OpenShadingLanguage 1.00
# Compiled by oslc 1.9.8
# options: -O2 -DNDEBUG -I/hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/include -o /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/appleseed/as_disney_material.oso
shader as_disney_material	%meta{string,as_maya_node_name,"asDisneyMaterial"} %meta{string,as_maya_classification,"drawdb/shader/surface:rendernode/appleseed/surface:shader/surface:swatch/AppleseedRenderSwatch"} %meta{string,as_blender_node_name,"asDisneyMaterial"} %meta{string,as_blender_category,"shader"} %meta{string,help,"Disney material."} %meta{string,icon,"asDisneyMaterial.png"} %meta{int,as_maya_type_id,1210819} %meta{string,as_max_class_id,"151203281 494163155"} %meta{string,as_max_plugin_type,"material"} %meta{string,URL,"https://appleseed.readthedocs.io/projects/appleseed-maya/en/latest/shaders/material/as_disney_material.html#label-as-disney-material"} 
param	color	in_color	0.5 0.5 0.5		%meta{string,as_maya_attribute_name,"color"} %meta{string,as_maya_attribute_short_name,"c"} %meta{string,label,"Surface Color"} %meta{string,page,"Common"}  %read{102,102} %write{2147483647,-1}
param	float	in_subsurface_amount	0		%meta{string,as_maya_attribute_name,"subsurfaceAmount"} %meta{string,as_maya_attribute_short_name,"ss"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Subsurface Weight"} %meta{string,page,"Common"}  %read{102,102} %write{2147483647,-1}
param	float	in_specular_amount	0.5		%meta{string,as_maya_attribute_name,"specularAmount"} %meta{string,as_maya_attribute_short_name,"sa"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Weight"} %meta{string,page,"Specular"}  %read{26,102} %write{2147483647,-1}
param	float	in_roughness	0.5		%meta{string,as_maya_attribute_name,"roughness"} %meta{string,as_maya_attribute_short_name,"ro"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Surface Roughness"} %meta{string,page,"Specular"}  %read{102,102} %write{2147483647,-1}
param	float	in_specular_tint	0		%meta{string,as_maya_attribute_name,"specularTint"} %meta{string,as_maya_attribute_short_name,"st"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Specular Tinting"} %meta{string,page,"Specular"}  %read{102,102} %write{2147483647,-1}
param	float	in_metallic_amount	0		%meta{string,as_maya_attribute_name,"metallicAmount"} %meta{string,as_maya_attribute_short_name,"ma"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Metallicness"} %meta{string,page,"Specular"} %meta{int,divider,1}  %read{102,102} %write{2147483647,-1}
param	float	in_anisotropy_amount	0		%meta{string,as_maya_attribute_name,"anisotropyAmount"} %meta{string,as_maya_attribute_short_name,"am"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Anisotropy Amount"} %meta{string,page,"Specular"}  %read{29,102} %write{2147483647,-1}
param	float	in_anisotropy_angle	0		%meta{string,as_maya_attribute_name,"anisotropyAngle"} %meta{string,as_maya_attribute_short_name,"aa"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Anisotropy Angle"} %meta{string,page,"Specular"} %meta{string,help,"The [0,1] range maps to [0,360] degrees range."}  %read{47,49} %write{2147483647,-1}
param	color	in_anisotropy_vector_map	0 0 0		%meta{string,as_maya_attribute_name,"anisotropyVectorMap"} %meta{string,as_maya_attribute_short_name,"vm"} %meta{string,label,"Anisotropy Vector Map"} %meta{string,page,"Specular"} %meta{string,help,"Vector tangent field map, with XY in R,G channels."}  %read{33,35} %write{2147483647,-1}
param	float	in_sheen_amount	0		%meta{string,as_maya_attribute_name,"sheenAmount"} %meta{string,as_maya_attribute_short_name,"ha"} %meta{float,min,0} %meta{float,max,10} %meta{float,softmax,1} %meta{string,label,"Sheen Weight"} %meta{string,page,"Sheen"}  %read{102,102} %write{2147483647,-1}
param	float	in_sheen_tint	0.5		%meta{string,as_maya_attribute_name,"sheenTint"} %meta{string,as_maya_attribute_short_name,"ht"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Sheen Tint"} %meta{string,page,"Sheen"}  %read{102,102} %write{2147483647,-1}
param	float	in_clear_coat	0		%meta{string,as_maya_attribute_name,"clearCoat"} %meta{string,as_maya_attribute_short_name,"ct"} %meta{float,min,0} %meta{float,max,100} %meta{float,softmax,1} %meta{string,label,"Coating Weight"} %meta{string,page,"Clear Coat"}  %read{102,102} %write{2147483647,-1}
param	float	in_clear_coat_glossyness	1		%meta{string,as_maya_attribute_name,"clearCoatGlossyness"} %meta{string,as_maya_attribute_short_name,"cy"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Coating Glossyness"} %meta{string,page,"Clear Coat"}  %read{102,102} %write{2147483647,-1}
param	normal	in_bump_normal	0 0 0		%meta{string,as_maya_attribute_name,"normalCamera"} %meta{string,as_maya_attribute_short_name,"n"} %meta{string,label,"Bump Normal"} %meta{string,page,"Bump"}  %read{24,50} %write{0,0} %initexpr
param	int	in_enable_matte	0		%meta{string,as_maya_attribute_name,"enableMatte"} %meta{string,as_maya_attribute_short_name,"ema"} %meta{string,widget,"checkBox"} %meta{string,label,"Enable Matte Opacity"} %meta{string,page,"Matte Opacity"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,divider,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{9,9} %write{2147483647,-1}
param	float	in_matte_opacity	0		%meta{string,as_maya_attribute_name,"matteOpacity"} %meta{string,as_maya_attribute_short_name,"mao"} %meta{float,min,0} %meta{float,max,1} %meta{string,label,"Matte Opacity"} %meta{string,page,"Matte Opacity"} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{11,11} %write{2147483647,-1}
param	color	in_matte_opacity_color	1 0.5 0		%meta{string,as_maya_attribute_name,"matteOpacityColor"} %meta{string,as_maya_attribute_short_name,"mac"} %meta{string,label,"Matte Opacity Color"} %meta{string,page,"Matte Opacity"} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{11,11} %write{2147483647,-1}
param	int	in_maximum_ray_depth	4		%meta{string,as_maya_attribute_name,"maximumRayDepth"} %meta{string,as_maya_attribute_short_name,"rd"} %meta{int,min,0} %meta{int,max,100} %meta{int,softmax,8} %meta{string,label,"Ray Depth"} %meta{string,page,"Advanced"} %meta{int,as_maya_attribute_connectable,0} %meta{int,as_maya_attribute_keyable,0} %meta{int,as_maya_attribute_hidden,1} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{19,19} %write{2147483647,-1}
param	vector	Tn	0 0 0		%meta{int,lockgeom,0} %meta{int,as_maya_attribute_hidden,1} %meta{string,widget,"null"} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{25,39} %write{2147483647,-1}
param	vector	Bn	0 0 0		%meta{int,lockgeom,0} %meta{int,as_maya_attribute_hidden,1} %meta{string,widget,"null"} %meta{int,as_blender_input_socket,0} %meta{int,gafferNoduleLayoutVisible,0}  %read{41,41} %write{2147483647,-1}
oparam	closure color	out_outColor			%meta{string,as_maya_attribute_name,"outColor"} %meta{string,as_maya_attribute_short_name,"oc"} %meta{string,widget,"null"}  %read{13,103} %write{13,103}
oparam	closure color	out_outTransparency			%meta{string,as_maya_attribute_name,"outTransparency"} %meta{string,as_maya_attribute_short_name,"ot"} %meta{string,widget,"null"}  %read{2147483647,-1} %write{2147483647,-1}
oparam	closure color	out_outMatteOpacity			%meta{string,as_maya_attribute_name,"outMatteOpacity"} %meta{string,as_maya_attribute_short_name,"om"} %meta{string,widget,"null"} %meta{int,as_maya_attribute_hidden,1} %meta{int,gafferNoduleLayoutVisible,0}  %read{13,13} %write{12,12}
global	normal	N	%read{0,0} %write{2147483647,-1}
local	vector	___254_axis	%read{56,58} %write{53,53}
local	float	___254_cosang	%read{55,96} %write{54,54}
local	float	___254_sinang	%read{66,91} %write{54,54}
local	float	___254_cosang1	%read{65,90} %write{55,55}
local	float	___254_x	%read{59,91} %write{56,56}
local	float	___254_y	%read{64,89} %write{57,57}
local	float	___254_z	%read{66,94} %write{58,58}
local	matrix	___254_M	%read{100,100} %write{98,98}
local	int	ray_depth	%read{19,19} %write{14,15}
local	int	status	%read{16,16} %write{15,15}
local	normal	Nn	%read{44,102} %write{24,24}
local	vector	tangent	%read{99,102} %write{25,101}
local	vector	___355_vector_map	%read{38,43} %write{37,37}
temp	int	$tmp1	%read{2,2} %write{1,1}
const	string	$const1	"shadow"		%read{1,1} %write{2147483647,-1}
temp	int	$tmp2	%read{3,7} %write{2,6}
const	int	$const2	0		%read{2,56} %write{2147483647,-1}
temp	int	$tmp3	%read{5,5} %write{4,4}
const	string	$const3	"transparency"		%read{4,4} %write{2147483647,-1}
temp	int	$tmp4	%read{6,6} %write{5,5}
temp	closure color	$tmp5	%read{12,12} %write{10,10}
const	string	$const4	"holdout"		%read{10,10} %write{2147483647,-1}
temp	color	$tmp6	%read{12,12} %write{11,11}
const	string	$const5	"path:ray_depth"		%read{15,15} %write{2147483647,-1}
temp	int	$tmp7	%read{17,17} %write{16,16}
temp	int	$tmp8	%read{18,22} %write{17,21}
temp	int	$tmp9	%read{20,20} %write{19,19}
temp	int	$tmp10	%read{21,21} %write{20,20}
const	float	$const6	0		%read{26,98} %write{2147483647,-1}
temp	int	$tmp11	%read{27,27} %write{26,26}
temp	int	$tmp12	%read{28,32} %write{27,31}
temp	int	$tmp13	%read{30,30} %write{29,29}
temp	int	$tmp14	%read{31,31} %write{30,30}
temp	int	$tmp15	%read{34,34} %write{33,33}
const	float	$const7	2		%read{35,35} %write{2147483647,-1}
temp	vector	$tmp16	%read{36,36} %write{35,35}
const	float	$const8	1		%read{36,98} %write{2147483647,-1}
temp	vector	$tmp17	%read{37,37} %write{36,36}
temp	float	$tmp18	%read{39,39} %write{38,38}
temp	vector	$tmp19	%read{42,42} %write{39,39}
const	int	$const9	1		%read{40,57} %write{2147483647,-1}
temp	float	$tmp20	%read{41,41} %write{40,40}
temp	vector	$tmp21	%read{42,42} %write{41,41}
temp	vector	$tmp22	%read{45,45} %write{42,42}
const	int	$const10	2		%read{43,58} %write{2147483647,-1}
temp	float	$tmp23	%read{44,44} %write{43,43}
temp	normal	$tmp24	%read{45,45} %write{44,44}
temp	vector	$tmp25	%read{46,46} %write{45,45}
temp	int	$tmp26	%read{48,48} %write{47,47}
const	float	$const11	6.2831855		%read{49,49} %write{2147483647,-1}
temp	float	$tmp27	%read{54,54} %write{49,49}
const	point	$const12	0 0 0		%read{52,101} %write{2147483647,-1}
temp	point	$tmp29	%read{52,52} %write{50,50}
const	string	$const13	"rotate"		%read{51,51} %write{2147483647,-1}
temp	vector	$tmp30	%read{53,53} %write{52,52}
temp	float	$tmp31	%read{63,63} %write{59,59}
temp	float	$tmp32	%read{61,61} %write{60,60}
temp	float	$tmp33	%read{62,62} %write{61,61}
temp	float	$tmp34	%read{63,63} %write{62,62}
temp	float	$tmp35	%read{98,98} %write{63,63}
temp	float	$tmp36	%read{65,65} %write{64,64}
temp	float	$tmp37	%read{67,67} %write{65,65}
temp	float	$tmp38	%read{67,67} %write{66,66}
temp	float	$tmp39	%read{98,98} %write{67,67}
temp	float	$tmp40	%read{69,69} %write{68,68}
temp	float	$tmp41	%read{71,71} %write{69,69}
temp	float	$tmp42	%read{71,71} %write{70,70}
temp	float	$tmp43	%read{98,98} %write{71,71}
temp	float	$tmp44	%read{73,73} %write{72,72}
temp	float	$tmp45	%read{75,75} %write{73,73}
temp	float	$tmp46	%read{75,75} %write{74,74}
temp	float	$tmp47	%read{98,98} %write{75,75}
temp	float	$tmp48	%read{80,80} %write{76,76}
temp	float	$tmp49	%read{78,78} %write{77,77}
temp	float	$tmp50	%read{79,79} %write{78,78}
temp	float	$tmp51	%read{80,80} %write{79,79}
temp	float	$tmp52	%read{98,98} %write{80,80}
temp	float	$tmp53	%read{82,82} %write{81,81}
temp	float	$tmp54	%read{84,84} %write{82,82}
temp	float	$tmp55	%read{84,84} %write{83,83}
temp	float	$tmp56	%read{98,98} %write{84,84}
temp	float	$tmp57	%read{86,86} %write{85,85}
temp	float	$tmp58	%read{88,88} %write{86,86}
temp	float	$tmp59	%read{88,88} %write{87,87}
temp	float	$tmp60	%read{98,98} %write{88,88}
temp	float	$tmp61	%read{90,90} %write{89,89}
temp	float	$tmp62	%read{92,92} %write{90,90}
temp	float	$tmp63	%read{92,92} %write{91,91}
temp	float	$tmp64	%read{98,98} %write{92,92}
temp	float	$tmp65	%read{97,97} %write{93,93}
temp	float	$tmp66	%read{95,95} %write{94,94}
temp	float	$tmp67	%read{96,96} %write{95,95}
temp	float	$tmp68	%read{97,97} %write{96,96}
temp	float	$tmp69	%read{98,98} %write{97,97}
temp	vector	$tmp70	%read{101,101} %write{100,100}
temp	vector	$tmp71	%read{100,100} %write{99,99}
temp	closure color	$tmp72	%read{103,103} %write{102,102}
const	string	$const14	"as_disney"		%read{102,102} %write{2147483647,-1}
code in_bump_normal
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:169
#     ]],
	assign		in_bump_normal N 	%filename{"/hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl"} %line{169} %argrw{"wr"}
code ___main___
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:259
#     if (raytype("shadow") || raytype("transparency"))
	raytype		$tmp1 $const1 	%filename{"/hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl"} %line{259} %argrw{"wr"}
	neq		$tmp2 $tmp1 $const2 	%argrw{"wrr"}
	if		$tmp2 4 7 	%argrw{"r"}
	raytype		$tmp3 $const3 	%argrw{"wr"}
	neq		$tmp4 $tmp3 $const2 	%argrw{"wrr"}
	assign		$tmp2 $tmp4 	%argrw{"wr"}
	if		$tmp2 9 9 	%argrw{"r"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:261
#         return;
	exit	%line{261}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:264
#     if (in_enable_matte)
	if		in_enable_matte 14 14 	%line{264} %argrw{"r"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:267
#             in_matte_opacity_color * holdout();
	closure		$tmp5 $const4 	%line{267} %argrw{"wr"}
	mul		$tmp6 in_matte_opacity in_matte_opacity_color 	%argrw{"wrr"}
	mul		out_outMatteOpacity $tmp5 $tmp6 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:269
#         out_outColor += out_outMatteOpacity;
	add		out_outColor out_outColor out_outMatteOpacity 	%line{269} %argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:272
#     int ray_depth = 0;
	assign		ray_depth $const2 	%line{272} %argrw{"wr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:273
#     int status = getattribute("path:ray_depth", ray_depth);
	getattribute	status $const5 ray_depth 	%line{273} %argrw{"wrw"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:275
#     if (!status || ray_depth > in_maximum_ray_depth)
	eq		$tmp7 status $const2 	%line{275} %argrw{"wrr"}
	neq		$tmp8 $tmp7 $const2 	%argrw{"wrr"}
	if		$tmp8 19 22 	%argrw{"r"}
	gt		$tmp9 ray_depth in_maximum_ray_depth 	%argrw{"wrr"}
	neq		$tmp10 $tmp9 $const2 	%argrw{"wrr"}
	assign		$tmp8 $tmp10 	%argrw{"wr"}
	if		$tmp8 24 24 	%argrw{"r"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:277
#         return;
	exit	%line{277}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:280
#     normal Nn = normalize(in_bump_normal);
	normalize	Nn in_bump_normal 	%line{280} %argrw{"wr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:281
#     vector tangent = Tn;
	assign		tangent Tn 	%line{281} %argrw{"wr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:283
#     if (in_specular_amount > 0.0 && in_anisotropy_amount > 0.0)
	gt		$tmp11 in_specular_amount $const6 	%line{283} %argrw{"wrr"}
	neq		$tmp12 $tmp11 $const2 	%argrw{"wrr"}
	if		$tmp12 32 32 	%argrw{"r"}
	gt		$tmp13 in_anisotropy_amount $const6 	%argrw{"wrr"}
	neq		$tmp14 $tmp13 $const2 	%argrw{"wrr"}
	assign		$tmp12 $tmp14 	%argrw{"wr"}
	if		$tmp12 102 102 	%argrw{"r"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:285
#         if (isconnected(in_anisotropy_vector_map))
	isconnected	$tmp15 in_anisotropy_vector_map 	%line{285} %argrw{"wr"}
	if		$tmp15 47 47 	%argrw{"r"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:288
#                 (vector) in_anisotropy_vector_map * 2.0 - 1.0);
	mul		$tmp16 in_anisotropy_vector_map $const7 	%line{288} %argrw{"wrr"}
	sub		$tmp17 $tmp16 $const8 	%argrw{"wrr"}
	normalize	___355_vector_map $tmp17 	%argrw{"wr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:290
#             tangent = normalize(vector_map[0] * Tn +
	compref		$tmp18 ___355_vector_map $const2 	%line{290} %argrw{"wrr"}
	mul		$tmp19 $tmp18 Tn 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:291
#                                 vector_map[1] * Bn +
	compref		$tmp20 ___355_vector_map $const9 	%line{291} %argrw{"wrr"}
	mul		$tmp21 $tmp20 Bn 	%argrw{"wrr"}
	add		$tmp22 $tmp19 $tmp21 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:292
#                                 vector_map[2] * Nn);
	compref		$tmp23 ___355_vector_map $const10 	%line{292} %argrw{"wrr"}
	mul		$tmp24 $tmp23 Nn 	%argrw{"wrr"}
	add		$tmp25 $tmp22 $tmp24 	%argrw{"wrr"}
	normalize	tangent $tmp25 	%argrw{"wr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:295
#         if (in_anisotropy_angle > 0.0)
	gt		$tmp26 in_anisotropy_angle $const6 	%line{295} %argrw{"wrr"}
	if		$tmp26 102 102 	%argrw{"r"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:299
#                 in_anisotropy_angle * M_2PI,
	mul		$tmp27 in_anisotropy_angle $const11 	%line{299} %argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:301
#                 point(in_bump_normal));
	assign		$tmp29 in_bump_normal 	%line{301} %argrw{"wr"}
	functioncall	$const13 102 	%argrw{"r"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:274
#     vector axis = normalize (b - a);
	sub		$tmp30 $tmp29 $const12 	%filename{"/hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h"} %line{274} %argrw{"wrr"}
	normalize	___254_axis $tmp30 	%argrw{"wr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:276
#     sincos (angle, sinang, cosang);
	sincos		$tmp27 ___254_sinang ___254_cosang 	%line{276} %argrw{"rww"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:277
#     float cosang1 = 1.0 - cosang;
	sub		___254_cosang1 $const8 ___254_cosang 	%line{277} %argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:278
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___254_x ___254_axis $const2 	%line{278} %argrw{"wrr"}
	compref		___254_y ___254_axis $const9 	%argrw{"wrr"}
	compref		___254_z ___254_axis $const10 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:279
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp31 ___254_x ___254_x 	%line{279} %argrw{"wrr"}
	mul		$tmp32 ___254_x ___254_x 	%argrw{"wrr"}
	sub		$tmp33 $const8 $tmp32 	%argrw{"wrr"}
	mul		$tmp34 $tmp33 ___254_cosang 	%argrw{"wrr"}
	add		$tmp35 $tmp31 $tmp34 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:280
#                        x * y * cosang1 + z * sinang,
	mul		$tmp36 ___254_x ___254_y 	%line{280} %argrw{"wrr"}
	mul		$tmp37 $tmp36 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp38 ___254_z ___254_sinang 	%argrw{"wrr"}
	add		$tmp39 $tmp37 $tmp38 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:281
#                        x * z * cosang1 - y * sinang,
	mul		$tmp40 ___254_x ___254_z 	%line{281} %argrw{"wrr"}
	mul		$tmp41 $tmp40 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp42 ___254_y ___254_sinang 	%argrw{"wrr"}
	sub		$tmp43 $tmp41 $tmp42 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:283
#                        x * y * cosang1 - z * sinang,
	mul		$tmp44 ___254_x ___254_y 	%line{283} %argrw{"wrr"}
	mul		$tmp45 $tmp44 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp46 ___254_z ___254_sinang 	%argrw{"wrr"}
	sub		$tmp47 $tmp45 $tmp46 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:284
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp48 ___254_y ___254_y 	%line{284} %argrw{"wrr"}
	mul		$tmp49 ___254_y ___254_y 	%argrw{"wrr"}
	sub		$tmp50 $const8 $tmp49 	%argrw{"wrr"}
	mul		$tmp51 $tmp50 ___254_cosang 	%argrw{"wrr"}
	add		$tmp52 $tmp48 $tmp51 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:285
#                        y * z * cosang1 + x * sinang,
	mul		$tmp53 ___254_y ___254_z 	%line{285} %argrw{"wrr"}
	mul		$tmp54 $tmp53 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp55 ___254_x ___254_sinang 	%argrw{"wrr"}
	add		$tmp56 $tmp54 $tmp55 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:287
#                        x * z * cosang1 + y * sinang,
	mul		$tmp57 ___254_x ___254_z 	%line{287} %argrw{"wrr"}
	mul		$tmp58 $tmp57 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp59 ___254_y ___254_sinang 	%argrw{"wrr"}
	add		$tmp60 $tmp58 $tmp59 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:288
#                        y * z * cosang1 - x * sinang,
	mul		$tmp61 ___254_y ___254_z 	%line{288} %argrw{"wrr"}
	mul		$tmp62 $tmp61 ___254_cosang1 	%argrw{"wrr"}
	mul		$tmp63 ___254_x ___254_sinang 	%argrw{"wrr"}
	sub		$tmp64 $tmp62 $tmp63 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:289
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp65 ___254_z ___254_z 	%line{289} %argrw{"wrr"}
	mul		$tmp66 ___254_z ___254_z 	%argrw{"wrr"}
	sub		$tmp67 $const8 $tmp66 	%argrw{"wrr"}
	mul		$tmp68 $tmp67 ___254_cosang 	%argrw{"wrr"}
	add		$tmp69 $tmp65 $tmp68 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:291
#                        0.0, 0.0, 0.0, 1.0);
	matrix		___254_M $tmp35 $tmp39 $tmp43 $const6 $tmp47 $tmp52 $tmp56 $const6 $tmp60 $tmp64 $tmp69 $const6 $const6 $const6 $const6 $const8 	%line{291} %argrw{"wrrrrrrrrrrrrrrrr"}
# /hdd/Devel/appleseedhq/appleseed/sandbox/shaders/stdosl.h:292
#     return transform (M, p-a) + a;
	sub		$tmp71 tangent $const12 	%line{292} %argrw{"wrr"}
	transformv	$tmp70 ___254_M $tmp71 	%argrw{"wrr"}
	add		tangent $tmp70 $const12 	%argrw{"wrr"}
# /hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl:318
#         in_clear_coat_glossyness);
	closure		$tmp72 $const14 Nn tangent in_color in_subsurface_amount in_metallic_amount in_specular_amount in_specular_tint in_anisotropy_amount in_roughness in_sheen_amount in_sheen_tint in_clear_coat in_clear_coat_glossyness 	%filename{"/hdd/Devel/appleseedhq/appleseed/src/appleseed.shaders/src/appleseed/as_disney_material.osl"} %line{318} %argrw{"wrrrrrrrrrrrrrr"}
	add		out_outColor out_outColor $tmp72 	%argrw{"wrr"}
	end
