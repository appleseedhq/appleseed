            Specifications of the BinaryCurve file format
                    Revision 1 - May 28th, 2018



INTRODUCTION

  The purpose of the BinaryCurve file format is to store 3D curve geometry in a compact
and efficient-to-read form.

  The format is fully LITTLE-ENDIAN, regardless of the machine used to author
files.



GENERAL STRUCTURE

  .----------------------------------.
  |             Signature            |    11 bytes (string without 0 at the end)
  +----------------------------------+
  |              Version             |    2 bytes (16-bit unsigned integer)
  +----------------------------------+
  |               Data               |
  `----------------------------------'

  The signature field must contain the 11-character long string "BINARYCURVE".
If it contains any other value, the file is not a valid BinaryCurve file.

  The format of the Data block depends on the value of the Version field.



DATA BLOCK FORMAT VERSION 1


  .----------------------------------.
  |             Basis                |    1 byte (8-bit unsigned char enum - linear(1)/ bezier(2)/ b-spline(3)/ catmull-rom(4))
  +----------------------------------+
  |         Number of curves         |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |    Number of vertices curve #1   |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  | Coordinates of vertex #1 [X,Y,Z] |    12 bytes (3 single precision floats)
  +----------------------------------+
  | Coordinates of vertex #2 [X,Y,Z] |    12 bytes (3 single precision floats)
  +----------------------------------+
  | Coordinates of vertex #3 [X,Y,Z] |    12 bytes (3 single precision floats)
  +----------------------------------+
  |              ...                 |
  +----------------------------------+
  |        Width at vertex #1        |    4 bytes (single precision float)
  +----------------------------------+
  |        Width of vertex #2        |    4 bytes (single precision float)
  +----------------------------------+
  |              ...                 |
  +----------------------------------+
  |       Opacity at vertex #1       |    4 bytes (single precision float)
  +----------------------------------+
  |       Opacity at vertex #2       |    4 bytes (single precision float)
  +----------------------------------+
  |              ...                 |
  +----------------------------------+
  |        Color of vertex #1        |    12 bytes (RGB single precision float)
  +----------------------------------+
  |        Color of vertex #2        |    12 bytes (RGB single precision float)
  +----------------------------------+
  |              ...                 |
  `----------------------------------'




DATA BLOCK FORMAT VERSION 2

  In version 2, the data block has the same format as in version 1 but it is
compressed with the LZ4 library (https://code.google.com/p/lz4/).

  The data block is split into multiple sub-blocks that are compressed
independently. Each sub-block has the following format:

  .----------------------------------.
  |  Len. of uncompressed sub-block  |    8 bytes (64-bit unsigned integer)
  +----------------------------------+
  |  Length of compressed sub-block  |    8 bytes (64-bit unsigned integer)
  +----------------------------------+
  |       Compressed sub-block       |
  `----------------------------------'
