
//
// This source file is part of appleseed.
// Visit http://appleseedhq.net/ for additional information and resources.
//
// This software is released under the MIT license.
//
// Copyright (c) 2014-2017 The masked shader writer, The appleseedhq Organization
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

#include "appleseed/gaffer/transform.h"

shader as_anisotropy_dir
(
    vector        Normal = N,
    vector        Tn = 0
    [[
        int    lockgeom = 0,
        string help = "Tangent",
        string label = "Tangent"
    ]],
    color         Color = color(1, 0, 0),
    float         AngleOffset = 0,
    output vector TangentOut = 0
)
{
    float x = mix(-1, 1, clamp(Color[0], 0, 1));
    float z = mix(-1, 1, clamp(Color[2], 0, 1));
    rotate2d(x, z, AngleOffset, x, z);
    vector Bn = cross(Tn, Normal);
    TangentOut = normalize(x * Tn + z * Bn);
}
