
//
// This source file is part of appleseed.
// Visit http://appleseedhq.net/ for additional information and resources.
//
// This software is released under the MIT license.
//
// Copyright (c) 2016 Luis Barrancos, The appleseedhq Organization
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// Ref: $MAYA_LOCATION/docs/Nodes/condition.html

shader as_maya_condition
[[
    string as_maya_node_name = "condition"
]]
(
    int in_operation = 0
    [[
        string as_maya_attribute_name = "operation",
        string label = "Operation",
        string widget = "mapper",
        string options = "Equal:0|Not Equal:1|Greater Than:2|Greater Or Equal:3|Less Than:4|Less Or Equal:5",
        string page = "Condition Attributes"
    ]],
    float in_firstTerm = 0.0
    [[
        string as_maya_attribute_name = "firstTerm",
        string label = "First Term",
        string page = "Condition Attributes"
    ]],
    float in_secondTerm = 0.0
    [[
        string as_maya_attribute_name = "secondTerm",
        string label = "Second Term",
        string page = "Condition Attributes"
    ]],
    color in_colorIfTrue = color(0)
    [[
        string as_maya_attribute_name = "colorIfTrue",
        string label = "Color If True",
        string page = "Condition Attributes"
    ]],
    color in_colorIfFalse = color(0)
    [[
        string as_maya_attribute_name = "colorIfFalse",
        string label = "Color If False",
        string page = "Condition Attributes"
    ]],

    output color out_outColor = color(0)
    [[
        string as_maya_attribute_name = "outColor",
        string lable = "Output Color",
        string widget = "null"
    ]]
)
{
    if (in_operation == 0)
    {
        out_outColor = (in_firstTerm == in_secondTerm)
            ? in_colorIfTrue
            : in_colorIfFalse;
    }
    else if (in_operation == 1)
    {
        out_outColor = (in_firstTerm != in_secondTerm)
            ? in_colorIfTrue
            : in_colorIfFalse;
    }
    else if (in_operation == 2)
    {
        out_outColor = (in_firstTerm > in_secondTerm)
            ? in_colorIfTrue
            : in_colorIfFalse;
    }
    else if (in_operation == 3)
    {
        out_outColor = (in_firstTerm >= in_secondTerm)
            ? in_colorIfTrue
            : in_colorIfFalse;
    }
    else if (in_operation == 4)
    {
        out_outColor = (in_firstTerm < in_secondTerm)
            ? in_colorIfTrue
            : in_colorIfFalse;
    }
    else if (in_operation == 5)
    {
        out_outColor = (in_firstTerm <= in_secondTerm)
            ? in_colorIfTrue
            : in_colorIfFalse ;
    }
    else
    {
#ifdef DEBUG
        string shadername = "";
        getattribute("shader:shadername", shadername);

        warning("[WARNING]: invalid operation in shader %s, %s:%i\n",
        shadername, __FILE__, __LINE__);
#endif
        out_outColor = color(0);
    }
}
