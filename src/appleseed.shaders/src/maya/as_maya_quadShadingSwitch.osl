
//
// This source file is part of appleseed.
// Visit http://appleseedhq.net/ for additional information and resources.
//
// This software is released under the MIT license.
//
// Copyright (c) 2016 Luis Barrancos, The appleseedhq Organization
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// Ref: $MAYA_LOCATION/docs/Nodes/quadShadingSwitch.html

shader as_maya_quadShadingSwitch
[[
    string maya_node_name = "quadShadingSwitch",
    string maya_classification = "utility/switch"
]]
(
    color in_inTriple[] = {0}
    [[
        string maya_attribute_name = "input[].inQuad.inTriple",
        string maya_attribute_type = "vector[]",
        string label = "Triple Value Component"
    ]],
    float in_inSingle[] = {0.0}
    [[
        string maya_attribute_name = "input[].inQuad.inSingle",
        string maya_attribute_type = "float[]",
        string label = "Single Value Component"
    ]],
    string in_inShape[] = {""}
    [[
        string maya_attribute_name = "input[].inShape",
        string maya_attribute_type = "string[]",
        string label = "Shape Name"
    ]],
    color in_defTriple = color(0.8)
    [[
        string maya_attribute_name = "default.defTriple",
        string maya_attribute_type = "vector",
        string label = "Default Triple Value"
    ]],
    float in_defSingle = 0.0
    [[
        string maya_attribute_name = "default.defSingle",
        string maya_attribute_type = "float",
        string label = "Default Single Value"
    ]],

    output color out_outTriple = color(0)
    [[
        string maya_attribute_name = "output.outTriple",
        string maya_attribute_type = "vector",
        string label = "Output Triple Value",
        string widget = "null"
    ]],
    output float out_outSingle = 0.0
    [[
        string maya_attribute_name = "output.outSingle",
        string maya_attribute_type = "float",
        string label = "Output Single Value",
        string widget = "null"
    ]]
)
{
    string shape = "";
    out_outTriple = in_defTriple;
    out_outSingle = in_defSingle;

    if (getattribute("object:object_name", shape))
    {
        for (int i = 0; i < arraylength(in_inShape); ++i)
        {
            if (in_inShape[i] == shape)
            {
                out_outTriple = in_inTriple[i];
                out_outSingle = in_inSingle[i];
                exit();
            }
        }
    }
}
