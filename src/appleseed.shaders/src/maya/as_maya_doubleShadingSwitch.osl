
//
// This source file is part of appleseed.
// Visit http://appleseedhq.net/ for additional information and resources.
//
// This software is released under the MIT license.
//
// Copyright (c) 2016 Luis Barrancos, The appleseedhq Organization
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// Ref: $MAYA_LOCATION/docs/Nodes/doubleShadingSwitch.html

shader as_maya_doubleShadingSwitch
[[
    string as_maya_node_name = "doubleShadingSwitch"
]]
(
    vector in_inDouble[] = {0}
    [[
        string as_maya_attribute_name = "inputs",
        string label = "Input Values"
    ]],
    string in_inShape[] = {""}
    [[
        string as_maya_attribute_name = "inputs",
        string label = "Shape Names"
    ]],
    float in_default[2] = {0,0}
    [[
        string as_maya_attribute_name = "default",
        string label = "Default Values"
    ]],

    output float out_output[2] = {0,0}
    [[
        string as_maya_attribute_name = "output",
        string label = "Output Values",
        string widget = "null"
    ]]
)
{
    string shape = "";
    out_output[0] = in_default[0];
    out_output[1] = in_default[1];

    if (getattribute("object:object_name", shape))
    {
        for (int i = 0; i < arraylength(in_inShape); ++i)
        {
            if (in_inShape[i] == shape)
            {
                out_output[0] = in_inDouble[i][0];
                out_output[1] = in_inDouble[i][1];
            }
        }
    }
}
