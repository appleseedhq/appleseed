
//
// This software is released under the MIT licence
//
// Copyright (c) 2013 Anders Langlands
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//

// This code is ported from alshaders original C++ implementation.
// https://bitbucket.org/anderslanglands/alshaders

#include "appleseed/fractal/as_extra_noises.h"

#include "alshaders/remap.h"
#include "alshaders/space.h"

shader alFlowNoise
[[
    string help = "Flow noise pattern generator",
    string description = "Useful for creating noise patterns that feel similar to fluid flows.",
    string as_maya_node_name = "alFlowNoise"
]]
(
    SPACE_DECLARE_PARAMS,
    float in_frequency = 1.0
    [[
        string label ="Frequency",
        string help = "Frequency of the noise pattern. Larger numbers make it smaller, lower numbers make it bigger.",
        string as_maya_attribute_name = "frequency"
    ]],
    int in_octaves = 4
    [[
        string label ="Octaves",
        string help = "Number of octaves to calculate. Higher numbers give more detail but take longer to compute.",
        string as_maya_attribute_name = "octaves"
    ]],
    float in_lacunarity = 2.172
    [[
        string label ="Lacunarity",
        string help = "How much the frequency is increased with each octave.",
        string as_maya_attribute_name = "lacunarity"
    ]],
    float in_gain = 0.5
    [[
        string label ="Gain",
        string help = "How much the intensity of the noise is scaled with each object.",
        string as_maya_attribute_name = "gain"
    ]],
    float in_angle = 0.0
    [[
        string label ="Angle",
        string help = "Animate this to control the rolling motion of the noise.",
        string as_maya_attribute_name = "angle"
    ]],
    float in_advection = 0.25
    [[
        string label ="Advection",
        string help = "Controls how much the smaller noise features are swept along with the larger ones.",
        string as_maya_attribute_name = "advection"
    ]],
    int in_turbulent = 0
    [[
        string label ="Turbulent",
        string help = "Enable this to switch from fBM to Turbulent noise.",
        string widget = "checkBox",
        string as_maya_attribute_name = "turbulent"
    ]],
    REMAP_FLOAT_DECLARE_PARAMS("Remap"),
    color in_color1 = 0
    [[
        string label = "Color 1",
        string help = "Color to use when the noise value is 0.",
        string as_maya_attribute_name = "color1"
    ]],
    color in_color2 = 1
    [[
        string label = "Color 2",
        string help = "Color to use when the noise value is 1.",
        string as_maya_attribute_name = "color2"
    ]],
    output closure color out_result = 0
    [[
        string as_maya_attribute_name = "outColor",
        string as_maya_attribute_short_name = "oc"
    ]]
)
{
    // todo: implement me...
}
