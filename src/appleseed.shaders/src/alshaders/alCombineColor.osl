
//
// This software is released under the MIT licence
//
// Copyright (c) 2013 Anders Langlands
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//

// This code comes from alshaders OSL branch, with minimal changes.
// https://bitbucket.org/anderslanglands/alshaders/branch/osl

// Constants
#define MULTIPLY    0
#define ADD         1
#define DIVIDE      2
#define SUBTRACT    3
#define LERP        4
#define DOT         5
#define DISTANCE    6
#define CROSS       7

shader alCombineColor
[[
    string help = "Combine two colors together.",
    string description = "Simple mathematical operations for combining colors: multiplication, addition, division, subtraction and interpolation.",
    string as_maya_node_name = "alCombineColor"
]]
(
    color in_input1 = color(0)
    [[
        string label = "Input 1",
        string as_maya_attribute_name = "input1"
    ]],
    color in_input2 = color(1)
    [[
        string label = "Input 2",
        string as_maya_attribute_name = "input2"
    ]],
    float in_input3 = 0
    [[
        string label = "Input 3",
        string as_maya_attribute_name = "input3"
    ]],
    int in_combineOp = 0
    [[
        string label = "Combine Op",
        string widget = "mapper",
        string options = "multiply 1*2:0|add 1+2:1|divide 1/2:2|subtract 1-2:3|lerp(1, 2, 3):4|dot(1, 2):5|distance(1 -> 2):6|cross(1, 2):7",
        string as_maya_attribute_name = "combineOp"
    ]],
    output color out_result = color(0)
    [[
        string as_maya_attribute_name = "outColor",
        string as_maya_attribute_short_name = "oc"
    ]]
)
{
    if (in_combineOp == MULTIPLY)
    {
        out_result = in_input1 * in_input2;
    }
    else if (in_combineOp == ADD)
    {
        out_result = in_input1 + in_input2;
    }
    else if (in_combineOp == DIVIDE)
    {
        out_result = in_input1 / in_input2;
    }
    else if (in_combineOp == SUBTRACT)
    {
        out_result = in_input1 - in_input2;
    }
    else if (in_combineOp == LERP)
    {
        out_result = mix(in_input1, in_input2, clamp(in_input3, 0.0, 1.0));
    }
    else if (in_combineOp == DOT)
    {
        out_result = dot(in_input1, in_input2);
    }
    else if (in_combineOp == DISTANCE)
    {
        out_result = distance(in_input1, in_input2);
    }
    else if (in_combineOp == CROSS)
    {
        out_result = cross(in_input1, in_input2);
    }
}
