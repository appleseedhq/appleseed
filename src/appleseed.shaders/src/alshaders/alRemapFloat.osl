
//
// This software is released under the MIT licence
//
// Copyright (c) 2013 Anders Langlands
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//

// This code comes from alshaders OSL branch, with minimal changes.
// https://bitbucket.org/anderslanglands/alshaders/branch/osl

#include "alshaders/remap.h"

shader alRemapFloat
[[
    string as_maya_node_name = "alRemapFloat"
]]
(
    float in_input = 0
    [[
        string as_maya_attribute_name = "input"
    ]],
    REMAP_FLOAT_DECLARE_PARAMS("Remap"),

    output float out_result = 0
    [[
        string as_maya_attribute_name = "outValue"
    ]]
)
{
    RemapFloatParams rmp = REMAP_FLOAT_CREATE;
    out_result = remap(in_input, rmp);
}
