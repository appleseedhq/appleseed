            Specifications of the BinaryMesh file format
                    Revision 1 - July 15th, 2013
                François Beaune <beaune@aist.enst.fr>



INTRODUCTION

  The purpose of the BinaryMesh file format is to store 3D geometry in a compact
and efficient-to-read form.

  The format is fully LITTLE-ENDIAN, regardless of the machine used to author
files.



GENERAL STRUCTURE

  .----------------------------------.
  |             Signature            |    10 bytes (string without 0 at the end)
  +----------------------------------+
  |              Version             |    2 bytes (16-bit unsigned integer)
  +----------------------------------+
  |               Data               |
  `----------------------------------'

  The signature field must contain the 10-character long string "BINARYMESH".
If it contains any other value, the file is not a valid BinaryMesh file.

  The format of the Data block depends on the value of the Version field.



DATA BLOCK FORMAT VERSION 1

  .----------------------------------.
  |    Length of object #1's name    |    2 bytes (16-bit unsigned integer)
  +----------------------------------+
  |        Name of object #1         |    String without 0 at the end
  +----------------------------------+
  |        Number of vertices        |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |  X coordinate of the vertex #1   |    4 bytes (single precision float)
  +----------------------------------+
  |  Y coordinate of the vertex #1   |    4 bytes (single precision float)
  +----------------------------------+
  |  Z coordinate of the vertex #1   |    4 bytes (single precision float)
  +----------------------------------+
  |  X coordinate of the vertex #2   |    4 bytes (single precision float)
  +----------------------------------+
  |              ...                 |
  +----------------------------------+
  |     Number of vertex normals     |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |  X coordinate of the normal #1   |    4 bytes (single precision float)
  +----------------------------------+
  |  Y coordinate of the normal #1   |    4 bytes (single precision float)
  +----------------------------------+
  |  Z coordinate of the normal #1   |    4 bytes (single precision float)
  +----------------------------------+
  |  X coordinate of the normal #2   |    4 bytes (single precision float)
  +----------------------------------+
  |              ...                 |
  +----------------------------------+
  |  Number of texture coordinates   |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |  U coordinate of the texcoord #1 |    4 bytes (single precision float)
  +----------------------------------+
  |  V coordinate of the texcoord #1 |    4 bytes (single precision float)
  +----------------------------------+
  |  U coordinate of the texcoord #2 |    4 bytes (single precision float)
  +----------------------------------+
  |              ...                 |
  +----------------------------------+
  |     Number of material slots     |    2 bytes (16-bit unsigned integer)
  +----------------------------------+
  |     Length of slot #1's name     |    2 bytes (16-bit unsigned integer)
  +----------------------------------+
  |         Name of slot #1          |    String without 0 at the end
  +----------------------------------+
  |     Length of slot #2's name     |    2 bytes (16-bit unsigned integer)
  +----------------------------------+
  |              ...                 |
  +----------------------------------+
  |         Number of faces          |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |  Number of vertices in face #1   |    2 bytes (16-bit unsigned integer)
  +----------------------------------+
  |  Index of vertex #1 of face #1   |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |  Index of normal #1 of face #1   |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |  Index of texcoord #1 of face #1 |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |  Index of vertex #2 of face #1   |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |  Index of normal #2 of face #1   |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |  Index of texcoord #2 of face #1 |    4 bytes (32-bit unsigned integer)
  +----------------------------------+
  |              ...                 |
  +----------------------------------+
  |   Index of material of face #1   |    2 bytes (16-bit unsigned integer)
  +----------------------------------+
  |  Number of vertices in face #2   |    2 bytes (16-bit unsigned integer)
  +----------------------------------+
  |              ...                 |
  `----------------------------------'



DATA BLOCK FORMAT VERSION 2

  In version 2, the data block has the same format as in version 1 but it is
compressed with the LZO library (http://www.oberhumer.com/opensource/lzo/).

  The data block is split into multiple sub-blocks that are compressed
independently. Each sub-block has the following format:

  .----------------------------------.
  |  Len. of uncompressed sub-block  |    8 bytes (64-bit unsigned integer)
  +----------------------------------+
  |  Length of compressed sub-block  |    8 bytes (64-bit unsigned integer)
  +----------------------------------+
  |       Compressed sub-block       |
  `----------------------------------'

  Version 2 of the BinaryMesh file format is DEPRECATED: no new files should be
written using this format.



DATA BLOCK FORMAT VERSION 3

  In version 3, the data block has the same format as in version 1 but it is
compressed with the LZ4 library (https://code.google.com/p/lz4/).

  The data block is split into multiple sub-blocks that are compressed
independently. Each sub-block has the following format:

  .----------------------------------.
  |  Len. of uncompressed sub-block  |    8 bytes (64-bit unsigned integer)
  +----------------------------------+
  |  Length of compressed sub-block  |    8 bytes (64-bit unsigned integer)
  +----------------------------------+
  |       Compressed sub-block       |
  `----------------------------------'
